[{"E:\\networkeng\\project\\twitter\\src\\index.js":"1","E:\\networkeng\\project\\twitter\\src\\reportWebVitals.js":"2","E:\\networkeng\\project\\twitter\\src\\App.js":"3","E:\\networkeng\\project\\twitter\\src\\components\\write-tweet\\write-tweet.components.js":"4","E:\\networkeng\\project\\twitter\\src\\components\\post-card.components\\post-card.components.js":"5","E:\\networkeng\\project\\twitter\\src\\pages\\login.pages\\login.pages.js":"6","E:\\networkeng\\project\\twitter\\src\\components\\navbar.components\\navbar.js":"7","E:\\networkeng\\project\\twitter\\src\\pages\\signUp.pages\\signup.pages.js":"8","E:\\networkeng\\project\\twitter\\src\\pages\\home.pages\\home.pages.js":"9","E:\\networkeng\\project\\twitter\\src\\components\\header.components\\header.components.js":"10","E:\\networkeng\\project\\twitter\\src\\pages\\signUp.pages\\signUp.pages.js":"11","E:\\networkeng\\project\\twitter\\src\\pages\\profile.pages\\profile.pages.js":"12","E:\\networkeng\\project\\twitter\\src\\components\\profile-header.components\\profile-header.components.js":"13","E:\\networkeng\\project\\twitter\\src\\pages\\twitter.pages\\twitter.pages.js":"14","E:\\networkeng\\project\\twitter\\src\\pages\\signup.pages\\signUp.pages.js":"15","E:\\networkeng\\project\\twitter\\src\\pages\\signup.pages\\signup.pages.js":"16","E:\\networkeng\\project\\twitter\\src\\pages\\status.pages\\status.pages.js":"17"},{"size":584,"mtime":1611584276010,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606219318015,"results":"20","hashOfConfig":"19"},{"size":2455,"mtime":1611776091034,"results":"21","hashOfConfig":"19"},{"size":3311,"mtime":1611765520129,"results":"22","hashOfConfig":"19"},{"size":9648,"mtime":1611776225997,"results":"23","hashOfConfig":"19"},{"size":3559,"mtime":1611776018935,"results":"24","hashOfConfig":"19"},{"size":3063,"mtime":1611776018833,"results":"25","hashOfConfig":"19"},{"size":2692,"mtime":1611610928358,"results":"26","hashOfConfig":"19"},{"size":1967,"mtime":1611776018863,"results":"27","hashOfConfig":"19"},{"size":1646,"mtime":1611776018823,"results":"28","hashOfConfig":"19"},{"size":2912,"mtime":1611664298980,"results":"29","hashOfConfig":"19"},{"size":3240,"mtime":1611776018913,"results":"30","hashOfConfig":"19"},{"size":11186,"mtime":1611776018843,"results":"31","hashOfConfig":"19"},{"size":1310,"mtime":1611670965461,"results":"32","hashOfConfig":"19"},{"size":2912,"mtime":1611664298980,"results":"33","hashOfConfig":"19"},{"size":3132,"mtime":1611776277648,"results":"34","hashOfConfig":"19"},{"size":3537,"mtime":1611775258985,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"tw3892",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"38"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"38"},"E:\\networkeng\\project\\twitter\\src\\index.js",[],["86","87"],"E:\\networkeng\\project\\twitter\\src\\reportWebVitals.js",[],"E:\\networkeng\\project\\twitter\\src\\App.js",["88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport LoginPage from './pages/login.pages/login.pages'\r\nimport SignUpPage from './pages/signup.pages/signup.pages'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport Navbar from './components/navbar.components/navbar'\r\nimport PostCard from './components/post-card.components/post-card.components'\r\nimport WriteTweet from './components/write-tweet/write-tweet.components'\r\nimport Profile from './pages/profile.pages/profile.pages'\r\nimport Home from './pages/home.pages/home.pages'\r\nimport TwitterHome from './pages/twitter.pages/twitter.pages'\r\nimport Status from './pages/status.pages/status.pages'\r\n\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken') || null);\r\n  const [myUser, setMyUser] = useState(JSON.parse(localStorage.getItem('myUser')) || null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  useEffect(()=>{\r\n    localStorage.setItem('token', token);\r\n  }, [token])\r\n  useEffect(()=>{\r\n    localStorage.setItem('myUser', JSON.stringify(myUser));\r\n  }, [myUser])\r\n  // useEffect(()=>{\r\n  //   localStorage.getItem('token');\r\n  // }, [])\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Switch>\r\n        <Route path=\"/profile/:username/status/:idx\">\r\n          <Statue refreshToken={refreshToken} token={token} myUser={myUser} />\r\n        </Route>\r\n        <Route path=\"/home\">\r\n          <Home refreshToken={refreshToken} token={token} myUser={myUser} />\r\n        </Route>\r\n        <Route path=\"/profile/:username\">\r\n          <Profile refreshToken={refreshToken} myUser={myUser} token={token} />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <LoginPage setRefreshToken={setRefreshToken} setToken={setToken} isModalOpen={isModalOpen}  setIsModalOpen={setIsModalOpen} setTheUser={setMyUser} />\r\n        </Route>\r\n        <Route path=\"/signup\"  >\r\n          <SignUpPage fromLogin={false}/>\r\n        </Route>\r\n        <Route path=\"/\"  >\r\n          <TwitterHome />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {/* <Profile cover=\"./material/cover2.jpg\" name={name} userName={userName} bio={bio} ></Profile>\r\n      <WriteTweet/>\r\n      <PostCard name={name} userName={userName} date={Math.floor(((Date.now()-date)/3600000)/24)} postText={text} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\networkeng\\project\\twitter\\src\\components\\write-tweet\\write-tweet.components.js",["94","95","96","97","98","99","100"],"\r\nimport React, { useState } from 'react';\r\nimport './write-tweet.styles.css';\r\nimport { Avatar } from 'antd';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { Button } from 'antd';\r\nimport { UserOutlined , CommentOutlined , RetweetOutlined ,LikeOutlined} from '@ant-design/icons';\r\n// import CustomButton from '../custom-button/custom-button.component' \r\n// import {useState , useEffect} from 'react';\r\n// import axios from 'axios';\r\nimport { Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst WriteTweet = ({token , commentTo}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [image, setImage] = useState(null);\r\n    const [video, setVideo] = useState(null);\r\n    const [writeTweetEn, setWriteTweetEn] = useState(true);\r\n    const onChange = ({ target: { value } }) => {\r\n        if (value.length>0)\r\n            setWriteTweetEn(false)\r\n        else\r\n            setWriteTweetEn(true)\r\n        setValue(value)\r\n    };\r\n    const sendTweet =()=>{\r\n        let formData = commentTo ==null ? {text : value , image : image , video: video } : {pk : commentTo, text : value , image : image , video: video }\r\n        // console.log(formData)\r\n        // console.log(token)\r\n        if(value.length>0)\r\n            if(commentTo ==null)\r\n                axios.post('http://twitterapifinal.pythonanywhere.com/twitt/create/', formData , {headers : {'Authorization' : 'Bearer  '+token}}).then(\r\n                    res => {\r\n                        // console.log(res)\r\n                    }\r\n                ).catch(err=>console.log(err))\r\n            else\r\n                axios.post('http://twitterapifinal.pythonanywhere.com/twitt/comment/create', formData , {headers : {'Authorization' : 'Bearer  '+token}}).then(\r\n                        res => {\r\n                            // console.log(res)\r\n                        }\r\n                    ).catch(err=>console.log(err))\r\n\r\n        else{\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"writeTweet\">\r\n            <div className=\"avatar\">\r\n                    <Avatar size={49} icon={<UserOutlined />} />\r\n            </div>\r\n            <div className=\"mainBody\">\r\n                <div className=\"textBox\">\r\n                    <TextArea\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        placeholder=\"What's happening?\"\r\n                        bordered={false}\r\n                        fullWidth={true}\r\n                        maxLength=\"250\"\r\n                        autoSize={{ minRows: 2, maxRows: 6 }}\r\n                        />\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"attachments\">\r\n                        <PermMediaIcon style={{ fontSize:25 , color:\"#1da1f2\"}} ></PermMediaIcon>\r\n                    </div>\r\n                    <div className=\"tweetBtn\">\r\n                        <Button type=\"primary\" shape=\"round\" size={\"large\"} onClick={sendTweet} disabled={writeTweetEn}> Tweet </Button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WriteTweet","E:\\networkeng\\project\\twitter\\src\\components\\post-card.components\\post-card.components.js",["101"],"import React, { useState, useEffect } from 'react';\r\nimport './post-card.styles.css';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined, CommentOutlined, HeartFilled, RetweetOutlined, LikeOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Input, Space, Modal } from 'antd';\r\nimport WriteTweet from '../write-tweet/write-tweet.components'\r\n\r\n// import CustomButton from '../custom-button/custom-button.component'\r\n// import {useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst PostCard = ({ tweet, myUser, token }) => {\r\n    const likedBy = ['ali', 'hasan', 'mohsen']\r\n    const avatar = tweet.user.picture_url\r\n    const name = tweet.user.name\r\n    const userName = tweet.user.username\r\n    const date = tweet.date\r\n    const postText = tweet.text\r\n    const postMedias = tweet.image\r\n    const pk = tweet.id\r\n    let history = useHistory()\r\n    const [liked, setLiked] = useState(null);\r\n<<<<<<< HEAD\r\n    const [isModalOpen, setIsModalOpen] = useState(null);\r\n=======\r\n    const [whoLikesLen, setWhoLikesLen] = useState(null);\r\n    const [retweeted, setRetweeted] = useState(null);\r\n    const [retweetedLen, setRetweetedLen] = useState(null);\r\n>>>>>>> 490df03f5852691fe662453ec5dd547e94aa7557\r\n    const dateFloor = (Date.now() - new Date(date)) / 1000\r\n    let formData = { id: pk }\r\n    let whoLikes = []\r\n    let retweetedList = []\r\n    useEffect(() => {\r\n        axios.get('http://twitterapifinal.pythonanywhere.com/twitt/get/' + pk).then(\r\n\r\n            res => {\r\n                console.log(res.data)\r\n                if (res.data.likes.length > 0) {\r\n                    res.data.likes.forEach(\r\n                        (result) => whoLikes.push(result)\r\n                    )\r\n                    setWhoLikesLen(whoLikes.length)\r\n                }\r\n\r\n                if (res.data.retwitts.length > 0) {\r\n                    res.data.retwitts.forEach(\r\n                        (result) => retweetedList.push(result)\r\n                    )\r\n                    setRetweetedLen(retweetedList.length)\r\n                }\r\n            }\r\n        )\r\n            .then(\r\n                () => {\r\n                    let found = whoLikes.find(element => element === myUser.username);\r\n\r\n                    found ? setLiked(true) : setLiked(false);\r\n\r\n                    found = retweetedList.find(element => element === myUser.username);\r\n\r\n                    found ? setRetweeted(true) : setRetweeted(false);\r\n\r\n                }\r\n            )\r\n    }, [])\r\n\r\n\r\n    const like = (e) => {\r\n        e.stopPropagation();\r\n        console.log(\"inja\")\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/twitt/like/', formData, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                console.log(\"inja\")\r\n                setWhoLikesLen(whoLikesLen+1)\r\n                setLiked(true)\r\n            }\r\n        )\r\n    };\r\n\r\n    const dislike = (e) => {\r\n        e.stopPropagation();\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/twitt/dislike/', formData, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                setWhoLikesLen(whoLikesLen-1)\r\n                setLiked(false)\r\n            }\r\n        )\r\n    };\r\n    let form = { pk: pk }\r\n    const retweet = (e) => {\r\n        e.stopPropagation();\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/twitt/retwitt/', form, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                setRetweetedLen(retweetedLen+1)\r\n                setRetweeted(true)\r\n            }\r\n        )\r\n    }\r\n    const unretweet = (e) => {\r\n        e.stopPropagation();\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/twitt/retwitt/', formData, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                setRetweetedLen(retweetedLen-1)\r\n                setRetweeted(false)\r\n            }\r\n        )\r\n    }\r\n    const postComment = (e) => {\r\n        e.stopPropagation()\r\n        showModal()\r\n\r\n    }\r\n    const menu = (id) => (\r\n        <Menu>\r\n            {/* <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n              \r\n            </a>\r\n          </Menu.Item> */}\r\n            <Menu.Item danger>delete {id}</Menu.Item>\r\n        </Menu>\r\n    );\r\n    const openPostCard = (e) => {\r\n        history.push(\"/profile/\" + userName + \"/status/\" + pk)\r\n    }\r\n    const openUser = (e) => {\r\n        e.stopPropagation();\r\n        history.push(\"/profile/\" + userName)\r\n    }\r\n    const showModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n    return (\r\n        <div className=\"postCard\" onClick={openPostCard}>\r\n            {\r\n                likedBy.length != 0 ?\r\n                    <div className=\"liked-header\">\r\n                        <LikeOutlined />\r\n                        <span>liked by {likedBy[0]} and {likedBy.length - 1} others</span>\r\n                    </div>\r\n                    :\r\n                    <div></div>\r\n            }\r\n            <div className=\"cardBody\">\r\n                <div className=\"avatar\" >\r\n                    <Avatar size={49} src={avatar} onClick={openUser} />\r\n                </div>\r\n                <div className=\"rightCol\">\r\n                    <div className=\"header\">\r\n                        <div className=\"details\" onClick={openUser}>\r\n                            <span className=\"name\">{name}</span>\r\n                            <span className=\"username\">@{userName}</span>\r\n                            {\r\n                                date != '' ?\r\n                                    <span className=\"date\">\r\n                                        {\r\n                                            dateFloor < 60 ?\r\n                                                Math.floor(dateFloor) + ' Seconds' :\r\n                                            dateFloor / 60 < 60 ?\r\n                                                Math.floor(dateFloor / 60) + ' Minutes' :\r\n                                            dateFloor / 3600 < 24 ?\r\n                                                Math.floor(dateFloor / 3600) + ' Hours' :\r\n                                            dateFloor / 86400 < 30 ?\r\n                                                Math.floor(dateFloor / 86400) + ' days' :\r\n                                            dateFloor / 86400 / 30 < 12 ?\r\n                                                Math.floor(dateFloor / 86400 / 30) + ' Months' :\r\n                                                Math.floor(dateFloor / 86400 / 30 / 12) + ' Years'\r\n                                        }\r\n                                    </span>\r\n                                    :\r\n                                    <div></div>\r\n\r\n                            }\r\n                        </div>\r\n                        <div className=\"setting\">\r\n                            <Dropdown overlay={() => menu(1)}>\r\n                                <EllipsisOutlined className=\"ant-dropdown-link\" onClick={e => e.preventDefault()} />\r\n                            </Dropdown>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"post\">\r\n                        <div className=\"tweetText\">{postText}</div>\r\n                        <div className=\"media\">\r\n                            <img src={postMedias}></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"actionBar\">\r\n                <div className=\"actionBarBtn\">\r\n                    <ChatBubbleOutlineIcon style={{ fontSize: 19 }} onClick={postComment} ></ChatBubbleOutlineIcon>\r\n                    <span>1</span>\r\n                </div>\r\n                <div className=\"actionBarBtn\">\r\n                    {\r\n                        retweeted ?\r\n                            <RetweetOutlined style={{ fontSize: 19 }} onClick={unretweet} />\r\n                            :\r\n                            <RetweetOutlined style={{ fontSize: 19 }} onClick={retweet} />\r\n                    }\r\n\r\n                    <span>\r\n                        {\r\n                            retweetedLen == 0 ? <span></span> : retweetedLen\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"actionBarBtn\">\r\n                    {\r\n                        liked ?\r\n                            <HeartFilled style={{ fontSize: 19, color: \"#ca2055\" }} onClick={dislike} />\r\n                            :\r\n                            <HeartFilled style={{ fontSize: 19, color: \"gray\" }} onClick={like} />\r\n                    }\r\n                    <span>{\r\n                        whoLikesLen == 0 ? <span></span> : whoLikesLen\r\n                    }</span>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal className=\"modal\" width=\"550px\" footer={null} closable={false} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n                    <PostCard tweet ={tweet} token={token} myUser={myUser} />\r\n                    <WriteTweet token={token} commentTo={pk}  />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCard","E:\\networkeng\\project\\twitter\\src\\pages\\login.pages\\login.pages.js",["102","103","104"],"import React, { useState } from \"react\";\r\nimport { Input, Space, Modal } from 'antd';\r\nimport Logo from './logo.png'\r\nimport './login.styles.css'\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SignUpPage from '../signup.pages/signup.pages'\r\n\r\n\r\n\r\n\r\n\r\nexport default function LoginPage({setRefreshToken, setToken, isModalOpen, setIsModalOpen , setTheUser }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(false);\r\n    let history = useHistory();\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = { \"email\": email, \"password\": password }\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/account/login/', formData).then(\r\n            res => {\r\n                console.log(res.status)\r\n                if (res.status === 200) {\r\n                    // console.log(res.data.access)\r\n                    axios.get('http://twitterapifinal.pythonanywhere.com/account/myprofile/' , {headers : {'Authorization' : 'Bearer  '+res.data.access}}).then(\r\n                        response => {\r\n                            // console.log(response.data)\r\n                            setTheUser(response.data)\r\n                            setToken(res.data.access)\r\n                            setRefreshToken(res.data.refresh)\r\n                            history.push(\"/home/\" + email)\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        ).catch(err=>setErr(true))\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div>\r\n                <img src={Logo} height='36px' width='45px'>\r\n                </img>\r\n            </div>\r\n            <h2>\r\n                Log in to Twitter\r\n            </h2>\r\n            {\r\n                err ? <div className=\"err\">\r\n                    The email and password you entered did not match our records. Please double-check and try again.\r\n                </div> : null\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <Input required type=\"email\" className=\"input\" value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                </label>\r\n                <Space className=\"sp\" direction=\"vertical\">\r\n                    <Input.Password required className=\"space\" type=\"password\" required value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                </Space>\r\n                <div>\r\n                    <button type=\"submit\" disabled={!validateForm()}>Submit</button>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <span>\r\n                    Forgot password?\r\n                </span>\r\n                <span>\r\n                    <a onClick={showModal}>Sign up for Twitter</a>\r\n                </span>\r\n                <Modal className=\"modal\" width=\"550px\" footer={null} closable={false} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n                    <SignUpPage fromLogin={true} setIsModalOpen={setIsModalOpen} />\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","E:\\networkeng\\project\\twitter\\src\\components\\navbar.components\\navbar.js",["105","106","107"],"import React , {useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from './logo.png'\r\nimport { HomeOutlined, UserOutlined } from '@ant-design/icons';\r\nimport './navbar.styles.css'\r\nimport { Input, Space, Modal } from 'antd';\r\nimport WriteTweet from '../write-tweet/write-tweet.components'\r\nimport { Button, Avatar, Menu, Dropdown } from 'antd';\r\n\r\n\r\nfunction Navbar({username}) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const menu = (\r\n    <Menu>\r\n        <div className=\"avatar-user\" >\r\n            <Avatar className=\"avatar\" />\r\n            <div className=\"container\">\r\n                <div className=\"name\" >\r\n                    folani\r\n                </div>\r\n                <div className=\"username\" >\r\n                    @folani\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Menu.Divider />\r\n        <Menu.Item className=\"menu\"><Link to=\"/\">\r\n            Log out\r\n        </Link></Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n};\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n};\r\n\r\nconst handleCancel = () => {\r\n    setIsModalOpen(false);\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <div className=\"up-row\">\r\n        <div className=\"image\">\r\n          <img src={Logo} height='36px' width='45px'>\r\n          </img>\r\n        </div>\r\n        <div className=\"button\">\r\n          <Link to={'/home'}>\r\n            <Button className=\"b\" icon={<HomeOutlined />}>Home</Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"button\">\r\n          <Link to={\"/profile/\"+username}>\r\n            <Button className=\"b\" icon={<UserOutlined />}>Profile</Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"button\">\r\n          <Link>\r\n            <Button className=\"tweet\" onClick={showModal} >Tweet</Button>\r\n          </Link>\r\n        </div>\r\n        <Modal className=\"modal\" width=\"550px\" footer={null} closable={false} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n          <WriteTweet />\r\n        </Modal>\r\n      </div>\r\n      <div className=\"down-row\">\r\n        <Dropdown \r\n        id=\"1\"\r\n        className=\"dropdown\" \r\n        placement=\"topCenter\" \r\n        overlay={menu} \r\n        trigger={['click']}\r\n        getPopupContainer={trigger => trigger.parentNode}\r\n        >\r\n            <Button className=\"logout\" >\r\n                Log out\r\n            </Button>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","E:\\networkeng\\project\\twitter\\src\\pages\\signUp.pages\\signup.pages.js",["108","109"],"E:\\networkeng\\project\\twitter\\src\\pages\\home.pages\\home.pages.js",["110","111","112","113","114","115","116"],"\r\nimport React, { useState , useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './home.styles.css';\r\nimport { Button, Avatar, Menu, Dropdown } from 'antd';\r\nimport Navbar from '../../components/navbar.components/navbar'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport WriteTweet from '../../components/write-tweet/write-tweet.components'\r\nimport PostCard from '../../components/post-card.components/post-card.components'\r\nimport Header from '../../components/header.components/header.components'\r\n\r\n\r\nconst Home = ({ token , myUser }) => {\r\n    const [tweetListObj, setTweetList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://twitterapifinal.pythonanywhere.com/twitt/list/' , {headers : {'Authorization' : 'Bearer  '+token}}).then(\r\n                        res => {\r\n                            // console.log(\"fetch tweets\")\r\n                            // console.log(res.data)\r\n                            setTweetList (res.data)\r\n                        }\r\n                    )\r\n    }, [])\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"leftCol\">\r\n                <Navbar username={myUser.username} />\r\n            </div>\r\n            <div className=\"rightCol\">\r\n                <Header route=\"home\" />\r\n                <WriteTweet token={token} />\r\n                {\r\n                    tweetListObj ?\r\n                    tweetListObj.results.map(\r\n                        (tweet) =>\r\n                        (\r\n                            <PostCard\r\n                                myUser={myUser}\r\n                                token = {token}\r\n                                tweet ={tweet}\r\n                                pk = {tweet.id}\r\n                                avatar={tweet.user.picture_url}\r\n                                name={tweet.user.name}\r\n                                userName={tweet.user.username}\r\n                                date={tweet.date}\r\n                                postText={tweet.text}\r\n                                postMedias={tweet.image} />\r\n                        )\r\n                        \r\n                    )\r\n                    :\r\n                    <div></div>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","E:\\networkeng\\project\\twitter\\src\\components\\header.components\\header.components.js",["117","118","119","120"],"\r\nimport React, { useState } from 'react';\r\nimport './header.styles.css';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst Header = ({route , name, numOfTweets}) => {\r\n    return (\r\n        <div className=\"pageHeader\">\r\n            {\r\n                \r\n                route==\"home\" ?\r\n                <div className=\"homeHeader\">\r\n                    <h2>Home</h2>\r\n                </div>\r\n                :\r\n                route==\"tweet\" ?\r\n                <div className=\"homeHeader\">\r\n                    <h2>Tweet</h2>\r\n                </div>\r\n                :\r\n                route==\"profile\" ?\r\n                <div className=\"profileHeader\">\r\n                    <div className=\"back\">\r\n                        <ArrowLeftOutlined />\r\n                    </div>\r\n                    <div className=\"user-header-detail\">\r\n                        <h2>{name}</h2>\r\n                        <span>{numOfTweets}</span>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header",["121","122"],"E:\\networkeng\\project\\twitter\\src\\pages\\signUp.pages\\signUp.pages.js",["123","124"],"import React, { useState } from \"react\";\r\nimport { Input, Space } from 'antd';\r\nimport Logo from './logo.png'\r\nimport './signup.styles.css'\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function SignUpPage({ fromLogin, setIsModalOpen }) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [err, setErr] = useState(false);\r\n    let history = useHistory();\r\n\r\n    function validateForm() {\r\n        return (\r\n            email.length > 0 &&\r\n            password.length > 0 &&\r\n            password === confirmPassword\r\n        );\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = { \"email\": email,\"password\": password, \"username\": username  }\r\n        console.log(email)\r\n        console.log(password)\r\n        console.log(username)\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/account/register', formData).then(\r\n            res => {\r\n                if (res.status === 200) {\r\n                    if (!fromLogin) { history.push('/login') }\r\n                    else{\r\n                        setIsModalOpen(false)\r\n                    }\r\n                }\r\n            }\r\n        ).catch(err=>setErr(true))\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            <div>\r\n                <img src={Logo} height='36px' width='45px'>\r\n                </img>\r\n            </div>\r\n            <h2>\r\n                Create your account\r\n            </h2>\r\n            {\r\n                err ? <div className=\"err\">\r\n                    The email or username  is already taken.\r\n                </div> : null\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <Input className=\"input\" value={username} placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    <Input className=\"input\" type=\"email\" required value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                </label>\r\n                <Space className=\"sp\" direction=\"vertical\">\r\n                    <Input.Password className=\"space\" type=\"password\" required value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <Input.Password className=\"space\" type=\"password\" required value={confirmPassword} placeholder=\"ConfirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Space>\r\n                <div>\r\n                    <button placeholder=\"Password\" type=\"submit\" disabled={!validateForm()}> Sign up </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n",["125","126"],"E:\\networkeng\\project\\twitter\\src\\pages\\profile.pages\\profile.pages.js",["127","128","129","130","131","132","133"],"\r\nimport React, { useState , useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './profile.styles.css';\r\nimport 'antd/dist/antd.css';\r\nimport ProfileHeader from '../../components/profile-header.components/profile-header.components'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { Button } from 'antd';\r\nimport { UserOutlined , CommentOutlined , RetweetOutlined ,LikeOutlined} from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport Navbar from '../../components/navbar.components/navbar'\r\nimport Header from '../../components/header.components/header.components'\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostCard from '../../components/post-card.components/post-card.components'\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst Profile = ({token, myUser}) => {\r\n    let { username } = useParams();\r\n    const [user, setUser] = useState(null);\r\n    const [tweets, setTweets] = useState(null);\r\n    let myusername;\r\n    if(myUser){\r\n        myusername =myUser.username\r\n    }\r\n    else{\r\n        myusername = null\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get('http://twitterapifinal.pythonanywhere.com/account/profile/'+username ).then(\r\n            res => {\r\n                // console.log(res.data)\r\n                setUser(res.data)\r\n            }\r\n        )\r\n        axios.get('http://twitterapifinal.pythonanywhere.com/twitt/twitt_profile/'+username ).then(\r\n            res => {\r\n                setTweets(res.data)\r\n            }\r\n        )\r\n\r\n    }, [username])\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"left-col\">\r\n                <Navbar username={myUser.username} />\r\n            </div>\r\n            {\r\n                user?\r\n                <div className=\"right-col\">\r\n                    <Header route=\"profile\" name={user.name} numOfTweets ={tweets==null ? 0 : tweets.count}/>\r\n                    <ProfileHeader \r\n                        token = {token}\r\n                        myusername={myusername}\r\n                        avatar={user.picture_url}\r\n                        cover={user.cover_url}\r\n                        name={user.name}\r\n                        userName={user.username}\r\n                        created_at={user.created_at} \r\n                        email={user.email}\r\n                    />\r\n                    {\r\n                        tweets ?\r\n                        tweets.results.map(\r\n                            (tweet) =>{\r\n                                // console.log(\"tweet\")\r\n                                // console.log(tweet)\r\n                                return (\r\n                                    <PostCard\r\n                                        myUser={myUser}\r\n                                        token = {token}\r\n                                        tweet = {tweet}\r\n                                    />\r\n                                )\r\n                            }\r\n                        )\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                </div>\r\n                \r\n                :\r\n                <div></div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","E:\\networkeng\\project\\twitter\\src\\components\\profile-header.components\\profile-header.components.js",["134","135","136","137","138","139"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport './profile-header.styles.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Avatar, Dropdown, Menu, Button, Modal } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport { UserOutlined, UserAddOutlined } from '@ant-design/icons';\r\n// import CustomButton from '../custom-button/custom-button.component' \r\n// import {useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Input } from 'antd';\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst ProfileHeader = ({ token, myusername, cover, avatar, name, userName, bio, email }) => {\r\n    const [hasFollowed, setHasFollowed] = useState(null);\r\n    let following = [];\r\n    useEffect(() => {\r\n        axios.get('http://twitterapifinal.pythonanywhere.com/account/following/list/' + myusername, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                if (res.data.results.length > 0) {\r\n\r\n                    res.data.results.forEach(\r\n                        function (result) {\r\n                            following.push(result.target.username)\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        ).then(\r\n            () => {\r\n                const found = following.find(element => element === userName);\r\n\r\n                found ? setHasFollowed(true) : setHasFollowed(false);\r\n            }\r\n        )\r\n    }, [userName])\r\n\r\n\r\n\r\n\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n\r\n    const editMenu = (\r\n        <Menu>\r\n            <div className=\"avatar-user\" >\r\n                <Avatar className=\"avatar\" />\r\n                <div className=\"container\">\r\n                    <div className=\"name\" >\r\n                        folani\r\n                    </div>\r\n                    <div className=\"username\" >\r\n                        @folani\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Menu.Divider />\r\n            <Menu.Item className=\"menu\"><Link to=\"/\">\r\n                Log out\r\n            </Link></Menu.Item>\r\n        </Menu>\r\n    );\r\n    let formData = { email: email }\r\n    const follow = () => {\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/account/follow/', formData, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                console.log(\"follow\")\r\n                console.log(res)\r\n                setHasFollowed(true)\r\n            }\r\n        )\r\n    };\r\n    const unfollow = () => {\r\n        // console.log(\"hiii\")\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/account/unfollow/', formData, { headers: { 'Authorization': 'Bearer  ' + token } }).then(\r\n            res => {\r\n                setHasFollowed(false)\r\n            }\r\n        )\r\n    };\r\n    const edit = () => {\r\n\r\n    };\r\n\r\n    const noImage = \"./material/no-cover.png\"\r\n    let haveFollowButton\r\n    if (myusername === userName) {\r\n        haveFollowButton = false\r\n    }\r\n    else {\r\n        haveFollowButton = true\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-header\">\r\n            <div className=\"cover\">\r\n                <img src={cover ? cover : noImage}></img>\r\n            </div>\r\n            <div className=\"avatar\">\r\n                {\r\n                    avatar ?\r\n                        <Avatar size={142} src={avatar} />\r\n                        :\r\n                        <Avatar size={142} icon={<UserOutlined />} />\r\n\r\n\r\n                }\r\n            </div>\r\n            <div className=\"details\">\r\n                <div className=\"actionBar\">\r\n                    {haveFollowButton ?\r\n                        <div className=\"followBtn\">\r\n                            {\r\n                                myusername ?\r\n\r\n                                    <div>\r\n                                        {\r\n                                            hasFollowed == true ?\r\n                                                <Button className=\"unfollow\" type=\"default\" shape=\"round\" size={\"large\"} onClick={unfollow} > Unfollow </Button>\r\n                                                :\r\n                                                hasFollowed == false ?\r\n                                                    <Button className=\"follow\" type=\"default\" shape=\"round\" size={\"large\"} onClick={follow} > Follow </Button> :\r\n                                                    <div></div>\r\n                                        }\r\n\r\n                                    </div>\r\n\r\n                                    :\r\n\r\n                                    <div>\r\n                                        <Button type=\"default\" shape=\"round\" size={\"large\"} onClick={showModal} >Follow</Button>\r\n                                        <Modal style={{ borderRadius: \"100px\" }} className=\"modal\" width=\"550px\" footer={null} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n                                            <div className=\"popLogin\"\r\n                                                style={\r\n                                                    {\r\n                                                        display: \"flex\",\r\n                                                        flexDirection: \"column\",\r\n                                                        justifyContent: \"center\",\r\n                                                        textAlign: \"center\"\r\n                                                    }\r\n                                                } >\r\n\r\n\r\n                                                <UserAddOutlined   style={{margin:\"40px\",fontSize:\"60px\",color:\"rgb(28, 164, 252)\"}} />\r\n\r\n\r\n                                                <div>\r\n                                                    <h1>\r\n                                                    Follow {\" \"}\r\n                                                    <span\r\n                                                        style={{ fontStyle: \"italic\" }}>\r\n                                                        {userName}\r\n                                                    </span> to see what they share on Twitter.\r\n                                                </h1>\r\n                                                <div style={{margin:\"40px\"}}>\r\n                                                    Sign up so you never miss their Tweets.\r\n                                                </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"button\"\r\n                                                >\r\n                                                    <Link to=\"/login\">\r\n                                                        <Button className=\"log\"\r\n                                                            style={\r\n                                                                {\r\n                                                                    backgroundColor: \"rgb(28, 164, 252)\",\r\n                                                                    outline: \"rgb(28, 164, 252)\",\r\n                                                                    color: \"white\",\r\n                                                                    width: \"90%\",\r\n                                                                    height: \"50px\",\r\n                                                                    borderRadius: \"50px\",\r\n                                                                    fontWeight: \"bold\",\r\n                                                                    fontSize: \"15px\",\r\n                                                                    justifyItems: \"center\",\r\n                                                                    margin: \"5px\"\r\n                                                                }\r\n                                                            }\r\n                                                        >Log in</Button>\r\n\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"button\">\r\n                                                    <Link to=\"/signup\">\r\n                                                        <Button className=\"sign\"\r\n                                                            style={\r\n                                                                {\r\n                                                                    backgroundColor: \"white\",\r\n                                                                    outline: \"rgb(28, 164, 252)\",\r\n                                                                    color: \"rgb(28, 164, 252)\",\r\n                                                                    width: \"90%\",\r\n                                                                    height: \"50px\",\r\n                                                                    borderRadius: \"50px\",\r\n                                                                    fontWeight: \"bold\",\r\n                                                                    fontSize: \"15px\",\r\n                                                                    justifyItems: \"center\",\r\n                                                                    margin: \"5px\"\r\n                                                                }\r\n                                                            }>Sign up</Button>\r\n                                                    </Link>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </Modal>\r\n                                    </div>\r\n\r\n                            }\r\n\r\n                        </div>\r\n                        :\r\n                        <div className=\"followBtn\">\r\n                            <Dropdown\r\n                                id=\"1\"\r\n                                className=\"dropdown\"\r\n                                placement=\"topCenter\"\r\n                                overlay={editMenu}\r\n                                trigger={['click']}\r\n                                getPopupContainer={trigger => trigger.parentNode}\r\n                            >\r\n                                <Button type=\"default\" shape=\"round\" size={\"large\"} onClick={edit}> Edit </Button>\r\n                            </Dropdown>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"biography\">\r\n                    <span className=\"name\">{name}</span>\r\n                    <span className=\"userName\">{userName}</span>\r\n                    <span className=\"bio\">{bio}</span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileHeader","E:\\networkeng\\project\\twitter\\src\\pages\\twitter.pages\\twitter.pages.js",["140","141"],"import react from 'react'\r\nimport './twitter.pages.css'\r\nimport Logo from './logo.png'\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function TwitterHome() {\r\n    return (\r\n        <div className=\"float-container\">\r\n\r\n            <div className=\"left\" >\r\n                <div className=\"twitter_text\">\r\n                    Twitter\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right\">\r\n                <div >\r\n                    <img className=\"logo\" src={Logo} height='36px' width='45px'>\r\n                    </img>\r\n                </div>\r\n                <div className=\"text\">\r\n                    See what’s happening in the world right now\r\n                </div>\r\n                <div className=\"txt\">\r\n                    Join Twitter today.\r\n                </div>\r\n                <div className=\"button\">\r\n                    <Link to=\"/signup\">\r\n                        <Button className=\"sign\" >Sign up</Button>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className=\"button\">\r\n                    <Link to=\"/login\">\r\n                        <Button className=\"log\" >Log in</Button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","E:\\networkeng\\project\\twitter\\src\\pages\\signup.pages\\signUp.pages.js",["142"],"E:\\networkeng\\project\\twitter\\src\\pages\\signup.pages\\signup.pages.js",["143"],"import React, { useState } from \"react\";\r\nimport { Input, Space } from 'antd';\r\nimport Logo from './logo.png'\r\nimport './signup.styles.css'\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function SignUpPage({ fromLogin, setIsModalOpen }) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    // const [name, setName] = useState(\"\");\r\n    const [err, setErr] = useState(false);\r\n    let history = useHistory();\r\n    function validateForm() {\r\n        return (\r\n            email.length > 0 &&\r\n            password.length > 0 &&\r\n            password === confirmPassword\r\n        );\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = { \"email\": email, \"password\": password, \"username\": username }\r\n        axios.post('http://twitterapifinal.pythonanywhere.com/account/register/', formData).then(\r\n            res => {\r\n                console.log(res)\r\n                if (res.status === 200) {\r\n                    if (!fromLogin) { history.push('/login') }\r\n                    else {\r\n                        setIsModalOpen(false)\r\n                    }\r\n                }\r\n            }\r\n        ).catch(err => {\r\n            console.log(err)\r\n            setErr(true)})\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            <div>\r\n                <img src={Logo} height='36px' width='45px'>\r\n                </img>\r\n            </div>\r\n            <h2>\r\n                Create your account\r\n            </h2>\r\n            {\r\n                err ? <div className=\"err\">\r\n                    The email or username  is already taken.\r\n                </div> : null\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                {/* <label>\r\n                    <Input className=\"input\" value={name} placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\r\n                </label> */}\r\n                <label>\r\n                    <Input className=\"input\" value={username} placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    <Input className=\"input\" type=\"email\" required value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n                </label>\r\n                <Space className=\"sp\" direction=\"vertical\">\r\n                    <Input.Password className=\"space\" type=\"password\" required value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <Input.Password className=\"space\" type=\"password\" required value={confirmPassword} placeholder=\"ConfirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Space>\r\n                <div>\r\n                    <button placeholder=\"Password\" type=\"submit\" disabled={!validateForm()}> Sign up </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","E:\\networkeng\\project\\twitter\\src\\pages\\status.pages\\status.pages.js",["144","145","146","147","148"],"import React, { useState , useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './status.styles.css';\r\nimport 'antd/dist/antd.css';\r\nimport ProfileHeader from '../../components/profile-header.components/profile-header.components'\r\nimport { Input } from 'antd';\r\nimport Navbar from '../../components/navbar.components/navbar'\r\nimport Header from '../../components/header.components/header.components'\r\nimport { withRouter } from \"react-router\";\r\nimport PostCard from '../../components/post-card.components/post-card.components'\r\n class Status extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        mainTweet : null,\r\n        comments :[],\r\n        username:\"\",\r\n        idx : \"\"\r\n      };\r\n    }\r\n    \r\n    getComments = async ()=>{\r\n        // console.log('start')\r\n        await axios.get('http://twitterapifinal.pythonanywhere.com/twitt/get/'+this.state.idx ).then(\r\n            res => {\r\n                // console.log('main tweet')\r\n                // console.log(res)\r\n                this.setState({mainTweet:res.data})\r\n                return res.data.comments\r\n            }\r\n        ).then(\r\n            async (cmnts) => {\r\n                console.log(\"comments\")\r\n                console.log(cmnts)\r\n                let id\r\n                let temp=[]\r\n                for (let i =0; i<cmnts.length ; i+=1){\r\n                    // console.log(\"for\")\r\n                    await axios.get('http://twitterapifinal.pythonanywhere.com/twitt/get/'+cmnts[i] ).then(\r\n                        response => {\r\n                            console.log(response.data)\r\n                            temp.push(response.data)\r\n                        }\r\n                    )\r\n                }\r\n                this.setState({comments:temp}  , ()=>console.log(\"state\", this.state))\r\n            }\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        this.setState({idx :  this.props.match.params.idx}, () => this.getComments())\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({idx :newProps.match.params.idx}, () => this.getComments())\r\n    }\r\n\r\n\r\n    render() {  \r\n      return (\r\n        <div className=\"home\">\r\n            <div className=\"left-col\">\r\n                <Navbar username={this.props.myUser.username} />\r\n            </div>\r\n            {\r\n                this.state.mainTweet?\r\n                <div className=\"right-col\">\r\n                    <Header route=\"tweet\" />\r\n                    <PostCard\r\n                        myUser ={this.props.myUser}\r\n                        token ={this.props.token}\r\n                        tweet ={this.state.mainTweet}\r\n                    />\r\n\r\n                    {\r\n                        this.state.comments.length>0 ?\r\n                        this.state.comments.map(\r\n                            (tweet) =>{\r\n                                console.log(\"tweet\")\r\n                                console.log(tweet)\r\n                                return (\r\n                                <div>\r\n                                    <PostCard token ={this.props.token} myUser = {this.props.myUser} tweet = {tweet}/>\r\n                                </div>\r\n                                )\r\n                            }\r\n                        )\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                </div>\r\n                :\r\n                <div></div>\r\n            }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\nexport default withRouter(Status);",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":5,"column":25,"nodeType":"155","messageId":"156","endLine":5,"endColumn":33},{"ruleId":"153","severity":1,"message":"157","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"158","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":16},{"ruleId":"153","severity":1,"message":"159","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":18},{"ruleId":"153","severity":1,"message":"160","line":12,"column":8,"nodeType":"155","messageId":"156","endLine":12,"endColumn":14},{"ruleId":"161","severity":2,"message":"162","line":34,"column":12,"nodeType":"163","endLine":34,"endColumn":18},{"ruleId":"153","severity":1,"message":"164","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":26},{"ruleId":"153","severity":1,"message":"165","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":26},{"ruleId":"153","severity":1,"message":"166","line":10,"column":25,"nodeType":"155","messageId":"156","endLine":10,"endColumn":40},{"ruleId":"153","severity":1,"message":"167","line":10,"column":43,"nodeType":"155","messageId":"156","endLine":10,"endColumn":58},{"ruleId":"153","severity":1,"message":"168","line":10,"column":60,"nodeType":"155","messageId":"156","endLine":10,"endColumn":72},{"ruleId":"153","severity":1,"message":"169","line":22,"column":19,"nodeType":"155","messageId":"156","endLine":22,"endColumn":27},{"ruleId":"153","severity":1,"message":"170","line":23,"column":19,"nodeType":"155","messageId":"156","endLine":23,"endColumn":27},{"ruleId":null,"fatal":true,"severity":2,"message":"171","line":19,"column":2},{"ruleId":"172","severity":1,"message":"173","line":59,"column":17,"nodeType":"174","endLine":59,"endColumn":60},{"ruleId":"175","severity":1,"message":"176","line":75,"column":80,"nodeType":"177","endLine":75,"endColumn":88},{"ruleId":"178","severity":1,"message":"179","line":86,"column":21,"nodeType":"174","endLine":86,"endColumn":44},{"ruleId":"153","severity":1,"message":"180","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"181","line":6,"column":17,"nodeType":"155","messageId":"156","endLine":6,"endColumn":22},{"ruleId":"172","severity":1,"message":"173","line":49,"column":11,"nodeType":"174","endLine":49,"endColumn":54},{"ruleId":"182","severity":1,"message":"183","line":36,"column":32,"nodeType":"184","messageId":"185","endLine":36,"endColumn":34},{"ruleId":"172","severity":1,"message":"173","line":49,"column":17,"nodeType":"174","endLine":49,"endColumn":60},{"ruleId":"153","severity":1,"message":"186","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":16},{"ruleId":"153","severity":1,"message":"187","line":5,"column":18,"nodeType":"155","messageId":"156","endLine":5,"endColumn":24},{"ruleId":"153","severity":1,"message":"188","line":5,"column":26,"nodeType":"155","messageId":"156","endLine":5,"endColumn":30},{"ruleId":"153","severity":1,"message":"189","line":5,"column":32,"nodeType":"155","messageId":"156","endLine":5,"endColumn":40},{"ruleId":"153","severity":1,"message":"190","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":14},{"ruleId":"153","severity":1,"message":"191","line":7,"column":16,"nodeType":"155","messageId":"156","endLine":7,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":24,"column":8,"nodeType":"194","endLine":24,"endColumn":10,"suggestions":"195"},{"ruleId":"153","severity":1,"message":"196","line":2,"column":17,"nodeType":"155","messageId":"156","endLine":2,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":12,"column":22,"nodeType":"184","messageId":"185","endLine":12,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":17,"column":22,"nodeType":"184","messageId":"185","endLine":17,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":22,"column":22,"nodeType":"184","messageId":"185","endLine":22,"endColumn":24},{"ruleId":"149","replacedBy":"197"},{"ruleId":"151","replacedBy":"198"},{"ruleId":"182","severity":1,"message":"183","line":35,"column":32,"nodeType":"184","messageId":"185","endLine":35,"endColumn":34},{"ruleId":"172","severity":1,"message":"173","line":48,"column":17,"nodeType":"174","endLine":48,"endColumn":60},{"ruleId":"149","replacedBy":"199"},{"ruleId":"151","replacedBy":"200"},{"ruleId":"153","severity":1,"message":"165","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":26},{"ruleId":"153","severity":1,"message":"186","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":16},{"ruleId":"153","severity":1,"message":"201","line":9,"column":10,"nodeType":"155","messageId":"156","endLine":9,"endColumn":22},{"ruleId":"153","severity":1,"message":"166","line":9,"column":25,"nodeType":"155","messageId":"156","endLine":9,"endColumn":40},{"ruleId":"153","severity":1,"message":"167","line":9,"column":43,"nodeType":"155","messageId":"156","endLine":9,"endColumn":58},{"ruleId":"153","severity":1,"message":"168","line":9,"column":60,"nodeType":"155","messageId":"156","endLine":9,"endColumn":72},{"ruleId":"153","severity":1,"message":"202","line":17,"column":9,"nodeType":"155","messageId":"156","endLine":17,"endColumn":17},{"ruleId":"153","severity":1,"message":"203","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":21},{"ruleId":"153","severity":1,"message":"202","line":13,"column":9,"nodeType":"155","messageId":"156","endLine":13,"endColumn":17},{"ruleId":"192","severity":1,"message":"204","line":39,"column":8,"nodeType":"194","endLine":39,"endColumn":18,"suggestions":"205"},{"ruleId":"172","severity":1,"message":"173","line":111,"column":17,"nodeType":"174","endLine":111,"endColumn":52},{"ruleId":"182","severity":1,"message":"183","line":132,"column":57,"nodeType":"184","messageId":"185","endLine":132,"endColumn":59},{"ruleId":"182","severity":1,"message":"183","line":135,"column":61,"nodeType":"184","messageId":"185","endLine":135,"endColumn":63},{"ruleId":"153","severity":1,"message":"206","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":19,"column":21,"nodeType":"174","endLine":19,"endColumn":81},{"ruleId":"172","severity":1,"message":"173","line":49,"column":17,"nodeType":"174","endLine":49,"endColumn":60},{"ruleId":"172","severity":1,"message":"173","line":49,"column":17,"nodeType":"174","endLine":49,"endColumn":60},{"ruleId":"153","severity":1,"message":"196","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"207","line":1,"column":28,"nodeType":"155","messageId":"156","endLine":1,"endColumn":37},{"ruleId":"153","severity":1,"message":"208","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":21},{"ruleId":"153","severity":1,"message":"180","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"209","line":35,"column":21,"nodeType":"155","messageId":"156","endLine":35,"endColumn":23},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'PostCard' is defined but never used.","'WriteTweet' is defined but never used.","'Status' is defined but never used.","react/jsx-no-undef","'Statue' is not defined.","JSXIdentifier","'DownloadOutlined' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'CommentOutlined' is defined but never used.","'RetweetOutlined' is defined but never used.","'LikeOutlined' is defined but never used.","'setImage' is assigned a value but never used.","'setVideo' is assigned a value but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 17 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mPostCard\u001b[39m \u001b[33m=\u001b[39m ({ tweet \u001b[33m,\u001b[39mmyUser\u001b[33m,\u001b[39mtoken  }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mPostCard\u001b[39m \u001b[33m=\u001b[39m ({ tweet\u001b[33m,\u001b[39m myUser\u001b[33m,\u001b[39m token }) \u001b[33m=>\u001b[39m {\u001b[0m","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Input' is defined but never used.","'Space' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Avatar' is defined but never used.","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'useState' is defined but never used.",["210"],["211"],["210"],["211"],"'UserOutlined' is defined but never used.","'TextArea' is assigned a value but never used.","'PermMediaIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'following', 'myusername', and 'token'. Either include them or remove the dependency array.",["213"],"'react' is defined but never used.","'useEffect' is defined but never used.","'ProfileHeader' is defined but never used.","'id' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [token]",{"range":"218","text":"219"},"Update the dependencies array to be: [following, myusername, token, userName]",{"range":"220","text":"221"},[1039,1041],"[token]",[1478,1488],"[following, myusername, token, userName]"]